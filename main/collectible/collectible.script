local gs = require "game_state"

local types = { "avocado", "pepper", "cheese", "tomato", "gold-coin", "diamond-coin" }
local particle_tints = { 
	avocado = vmath.vector4(0.69, 0.88, 0.11, 1),
	pepper = vmath.vector4(1, 0, 0, 1),
	cheese = vmath.vector4(1, 0.5, 0, 1),
	tomato = vmath.vector4(1, 0, 0, 1)
}

function init(self)
	math.randomseed(os.time())
	assign_random_type(self)
	-- self.type = types[math.random(1, 6)] -- For testing
	msg.post("#sprite", "play_animation", { id = hash(self.type) })
end

function assign_random_type(self)
	if math.random() < 0.9 then
		self.type = "gold-coin"
		return
	end
	
	if math.random() > 0.9 then
		self.type = "diamond-coin"
		return
	end
		
	self.type = types[math.random(1, 4)]
end

function get_score(self)
	local multiplier = gs.remaining_chilli_time > 0 and 2 or 1
	local score = self.type == "diamond-coin" and 10 or 1
	return score * multiplier
end

function update(self, dt)
	if gs.state ~= GS_PLAYING then
		return
	end
	local p = go.get_position()
	p.x = p.x + gs.game_speed * gs.get_game_speed_multiplier() * dt
	if p.x < -100 then
		go.delete()
	end
	go.set_position(p)
end

function emitter_state_change(self, id, emitter, state)
	if emitter == hash("exhaust") and state == particlefx.EMITTER_STATE_POSTSPAWN then
		particlefx.stop("#particlefx")
		go.delete()
	end
end

function spawn_particles_if_needed(self)
	local tint = particle_tints[self.type]
	if tint == nil then
		go.delete()
		return
	end
	particlefx.play("#particle", emitter_state_change)
	particlefx.set_constant("#particle", "emitter", "tint", tint)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		gs.score = gs.score + get_score(self)
		gs.update_game_speed_multiplier()
		msg.post("/gui#gui", "update_score", {score = gs.score})

		if self.type == "pepper" then
			msg.post("/main_go#main", "start_chilli_time")
		elseif self.type == "cheese" then
			msg.post("/main_go#main", "start_cheese_time")
		elseif self.type == "avocado" then
			msg.post("/player#player", "avocado_collected")
		end
		
		msg.post("#sprite", "disable")
		msg.post("#collisionobject", "disable")
		spawn_particles_if_needed(self)
	end
end
